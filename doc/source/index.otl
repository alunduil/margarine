Cloud Application Architect's Handbook
	Introduction
		: The purpose and goal of this documentation
	Epigraph
	Prologue
		: Opening story that sets the stage and gives background.  Often an
		: earlier story that ties into the story we're telling and other
		: miscellaneous but relevant information.
		Margarine Overview
		Margarine URLs
		Margarine Components
	Part 0—Cloud Fundamentals
		What is Cloud?
			A New Infrastructure
				High Availability Changes
			NIST
				Essential Characteristics
					On-demand Self-Service
						: A consumer can unilaterally provision computing capabilities,
						: such as server time and network storage, as needed automatically
						: without requiring human interaction with each service provider.
						API
						Control Panel
					Broad Network Access
						: Capabilities are available over the network and accessed through
						: standard mechanisms that promote use by heterogeneous thin or
						: thick client platforms (e.g., mobile phones, tablets, laptops,
						: and workstations).
					Resource Pooling
						: The provider's computing resources are pooled to serve multiple
						: consumers using a multi-tenant model, with different physical
						: and virtual resources dynamically assigned and reassigned
						: according to consumer demand.  There is a sense of location
						: independence in that the customer generally has no control or
						: knowledge over the exact location of the provided resources but
						: may be able to specify location at a higher level of abstraction
						: (e.g., country, state, or datacenter).  Examples of resources
						: include storage, processing, memory, and network bandwidth.
					Rapid Elasticity
						: Capabilities can be elastically provisioned and released, in
						: some cases automatically, to scale rapidly outward and inward
						: commensurate with demand.  To the consumer, the capabilities
						: available for provisioning often appear to be unlimited and can
						: be appropriated in any quantity at any time.
					Measured Service
						: Cloud systems automatically control and optimize resource use by
						: leveraging a metering capability at some level of abstraction
						: appropriate to the type of service (e.g., storage, processing,
						: bandwidth, and active user accounts).  Resource usage can be
						: monitored, controlled, and reported, providing transparency for
						: both the provider and consumer of the utilized service.
				Service Models
					Software as a Service
					Platform as a Service
					Infrastructure as a Service
				Deployment Models
					Private Cloud
					Community Cloud
					Public Cloud
					Hybrid Cloud
		Virtualization
			Virtual Machine
				Instance
				Guest Image
			Hypervisor
				Management
					libvirt
				Xen
					Dom0
					DomU
					xapi
				QEMU
				KVM
		Orchestration
			Openstack
				Projects
					Cells
					Cinder
					Flavor
					Glance
					Keystone
					Lunr
					Nova
					Neutron
				Command Line Tools
					novaclient
	Part 1—Developing Cloud Applications
		How to Design a Cloud Application
		How to Implement a Cloud Application
		How to Test a Cloud Application
			Software Testing
				Strategies
					Black Box
					White Box
					Automated
					Manual
				Methodologies
					Unit Tests
					Integration Tests
					Functional Tests
					User Acceptance Tests
			Python Software Testing
			Margarine Software Testing
			Continuous Integration
				Software
					Jenkins
		Handling Failure
		Modularize
		Distribute and Parallelize
		Agile Methodologies
		Using Pre-built Services and Libraries
			APIs
			Libraries
		Storing Code
			git
		Best Practices
			DRY—don't repeat yourself
		Design Patterns
			Publisher Subscriber or Consumer Producer
				Gang of Four
		Message Queues
			Software
				RabbitMQ
				Iron.io
			Protocols
				Stomp
				AMQP
				REST
		Datastores
			How to Pick a Datastore
			brewer's theorem
		API
			Bindings
			Listing Items
				atom feed
		Big Data
			Software
				Hadoop
				MongoDB
				CouchDB
		endpoint
		Security
			AAA
				authentication
					API Key
				authorization
		Quality
			Gerrit
			Jenkins
	Part 2—Operating Cloud Applications
		How to Build a Cloud Application
		How to Deploy a Cloud Application
		How to Maintain a Cloud Application
		Continuous Delivery
		Continuous Deployment
		AB Testing
		Security
			bastion
		Infrastructure to be Controlled
			Data Plane
			Control Plane
			Software Defined Networks
		Configuration Management
			chef
			puppet
			saltstack
			ansible
		Quality
			Jenkins
		Cloud Interaction
			Bindings
				libcloud
		Scaling in the Cloud
			Vertical Scaling
			Horizontal Scaling
	Part 3—Everything Else Cloud Applications
		DevOps
	[_] Afterword
		: How this document came to be.  How the idea for this document was
		: developed.  Thanks and acknowledgments to those who were helpful during
		: the writing period.
		:
		: History of Savvy and the birth of Margarine?  Also, thanks those most
		: influential in margarine's and this document's development?
	Appendix
		Modules
			margarine
			test_margarine
	Glossary
		fisma compliance—federal information security management act
		hippa compliance—health insurance portability and accountability
		open flow
		open vswitch
		paravirtualization
		pci compliant
		pv-ops
		recovery oriented computing
		restful api
		role
		saas
		sdk
		server
		slice
		swift
		service
		service catalog
		service registry
		soap api
		tenant
		token
		trunk
		trunk gating
		technical debt
		unit
	[_] Bibliography
		[_] http://devops.rackspace.com/
		[_] http://www.rackspace.com/knowledge_center/article/rackspace-open-cloud-reference-architecture
		[_] http://www.rackspace.com/knowledge_center/
		[_] http://www.forrester.com/home
		[_] https://github.com/rackspace
		[_] http://www.slideshare.net/Rackspace
		[_] http://wiki.openstack.org/IRC
		[_] NoSQL Distilled by Martin Fowler
